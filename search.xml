<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>机器学习2——基本概念</title>
      <link href="/2025/02/04/ji-qi-xue-xi-2-ji-ben-gai-nian/"/>
      <url>/2025/02/04/ji-qi-xue-xi-2-ji-ben-gai-nian/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>深度学习 ⊆ <strong>机器学习</strong> ⊆ 人工智能<ul><li>机器学习是人工智能的一个实现途径</li><li>深度学习是由机器学习发展而来</li></ul></li><li>应用领域：传统预测、图像识别、自然语言处理</li><li>理论书：《机器学习》“西瓜书”、《统计学习方法》</li><li>库：<strong>sklearn</strong></li><li>==<strong>模型选择</strong>==：<br><img src="https://s2.loli.net/2025/02/01/kAj2tX7rLOn5FMq.png" alt="image.png"></li></ul><h1 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h1><ul><li>机器学习：Machine Learning（ML）<ul><li>定义：从<strong>数据</strong>中自动分析获得<strong>模型</strong>（规律），并利用模型对未知数据进行<strong>预测</strong>（解决问题）</li></ul></li><li>==<strong>算法</strong>==是核心，<strong>数据</strong>和<strong>计算</strong>是基础</li></ul><h2 id="1、数据集的构成"><a href="#1、数据集的构成" class="headerlink" title="1、数据集的构成"></a>1、数据集的构成</h2><ul><li>结构：特征值+标签值（不一定有）<br><img src="https://s2.loli.net/2025/01/20/y5v6fATGs3p7Ld8.png" alt="image.png"><br><em>↑通过前四列特征值（x），预测最后一列标签值（y）</em><br><em>每一行称为样本</em><br><em>有些数据集可以没有标签值（聚类、分类）</em></li></ul><h2 id="2、算法的分类"><a href="#2、算法的分类" class="headerlink" title="2、算法的分类"></a>2、算法的分类</h2><ul><li><p>按照<strong>标签值</strong>是：</p><ul><li>类别：分类问题</li><li>连续型数据：回归问题</li><li>无：无监督学习</li></ul></li><li><p>分为==<strong>监督学习（supervised learning）和无监督学习（unsupervised learning）</strong>==</p><ul><li>监督学习：==分类、回归（有特征值、<strong>有标签值</strong>）==</li><li>无监督学习：==聚类（有特征值、<strong>无标签值</strong>）==</li></ul></li><li><p>算法：</p><ul><li>监督学习（预测）：<ul><li>分类问题：<strong>k-近邻算法、贝叶斯算法、决策树与随机森林、逻辑回归</strong></li><li>回归问题：<strong>线性回归、岭回归</strong></li></ul></li><li>无监督学习：<ul><li>聚类：<strong>k-means</strong></li></ul></li></ul></li></ul><h2 id="3、开发流程"><a href="#3、开发流程" class="headerlink" title="3、开发流程"></a>3、开发流程</h2><ol><li>获取数据</li><li>数据处理</li><li>特征工程</li><li>机器学习算法训练，得到模型</li><li>模型评估（必要时返回第二步再逐步修改）</li><li>实际应用<br><img src="https://s2.loli.net/2025/01/20/jRITXwUtS7LmfHr.png" alt="image.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生物化学代谢</title>
      <link href="/2025/02/02/sheng-hua-dai-xie/"/>
      <url>/2025/02/02/sheng-hua-dai-xie/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>生物化学课程代谢反应的特征总结，从产物、过程等特征来总结相关反应式。</strong></p><hr><ul><li><p>生成PPi的反应：</p><ul><li>生成UDP-G（活性葡萄糖，UTP脱PPi）</li><li>脂酸 + CoA + ATP -&gt; 脂酰~CoA + AMP + PPi</li><li>氨基酸 + ATP&nbsp;-&gt; 氨基酰~AMP + PPi（氨基酸的活化）</li><li>脂酰CoA的形成（脂肪酸的活化）</li><li>CDP-含氮碱的合成（CTP脱PPi）</li><li>瓜氨酸+天冬氨酸 -&gt; 精氨酸代琥珀酸</li><li>嘌呤碱合成第一步</li><li>嘧啶碱合成第五步</li><li>DNA复制5′至3′的聚合</li><li>两段DNA之间的连接（DNA复制）</li><li>氨基酰-tRNA的合成（翻译）</li><li>尿素合成总方程式</li></ul></li><li><p>底物水平磷酸化：</p><ul><li>1,3-二磷酸甘油醛 -&gt; 3-磷酸甘油醛（磷酸甘油酸激酶，糖酵解）</li><li>磷酸烯醇式丙酮酸 -&gt; 丙酮酸（丙酮酸激酶，糖酵解）</li><li>琥珀酰CoA -&gt; 琥珀酸（琥珀酰CoA合成酶，TCA）</li></ul></li><li><p>重要反应循环：</p><ul><li>糖酵解</li><li>TCA</li><li>糖异生</li><li>脂肪酸代谢</li><li>氨基酸代谢</li><li>尿素循环</li></ul></li><li><p>不可逆反应：</p><ul><li>G -&gt; G-6-P（糖酵解1）</li><li>F-6-P的磷酸化成F-1,6-P（糖酵解3）</li><li>PEP生成丙酮酸（糖酵解10）</li><li>丙酮酸生成乙酰CoA（有氧部分第一步）</li><li>乙酰CoA与草酰乙酸生成柠檬酸（TCA1）</li><li>α-酮戊二酸生成琥珀酰CoA（TCA4）</li><li><del>延胡索酸生成苹果酸（TCA7）</del></li></ul></li><li><p>氧化脱羧：</p><ul><li>丙酮酸&nbsp; → 乙酰CoA</li><li>异柠檬酸生成α-酮戊二酸（TCA3）</li><li>α-酮戊二酸生成琥珀酰CoA（TCA4）</li></ul></li><li><p>FAD参与的反应：</p><ul><li>琥珀酸生成延胡索酸（TCA6）</li><li>脂酰CoA脱氢生成烯脂酰CoA（β氧化1）</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《文明之旅》1011-1020年</title>
      <link href="/2025/01/31/wen-ming-zhi-lu-1011-1020-nian/"/>
      <url>/2025/01/31/wen-ming-zhi-lu-1011-1020-nian/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>这是一档聚焦中国历史，计划持续二十年制作播出的视频节目，也是一个超长期的文化工程。它将传承《资治通鉴》的中国编年史传统，从公元1000年开讲，一直讲到1912年，每一期节目聚焦于中国历史上的一年。上下913期节目，前后20年的时光，将陪伴和影响不止一代人。</strong></p><hr><h3 id="1011"><a href="#1011" class="headerlink" title="1011"></a>1011</h3><ul><li><strong>古人为什么会乱花钱？</strong></li><li>宋真宗花大钱祭祀汾阴。真宗为什么有钱花？宋辽战争停息有大量预算省出来（因为战争让税收达到高峰）。真宗其实尊重预算，且觉得封禅祭祀和赏赐百姓是应该做的。当代人有意义的花钱是在当下节省、对未来投资，观念基础是未来会更好，财富持续增长。而传统农耕社会基于循环史观，不相信财富会持续增长，不投资未来，只注重当下。古代天子花钱只有四条路：声色犬马、穷兵黩武、大兴土木、迷信活动（最无害的一种）。（对一个企业来说）有多余的钱，就会干多余的事。《富种起源》把产品分两类：生存品（生存刚需）、效用品（带来情绪价值）。有时候，效用品常常比生存品还重要，且效用品会不断进化迭代。例子：公孔雀的屏（性选择理论、费舍尔失控）。竞争、攀比等（内卷？）会把生存品变成效用品，把效用推到极致。分清需求和欲望！需求类似生存品，欲望类似效用品，不能没有，但也不能纵容。</li></ul><h3 id="1012"><a href="#1012" class="headerlink" title="1012"></a>1012</h3><ul><li><strong>大宋为什么歧视南方人？</strong></li><li>北宋初年不让南方人当宰相，为什么歧视南方人？①方言问题，北方听不懂。②宋朝本来就是北方人创立。③北方人可能认为南方人太投机，人品不好。④北方潜意识里怕竞争不过南方人，管不住南方人。其实北宋初年所谓南方人主要是指南唐遗民、遗臣，因为南唐实力其实很强，是块硬骨头，而且自称继承唐朝，有政权正统问题，还存在宋朝对南唐的经济文化自卑。什么是历史的灾难？就是把人浪费掉，人们不能干他们最喜欢最适合的事。而南唐没有把人浪费掉，反而致力于把文化的种子流传下去。每个乱世都有文明的火种罐，比如春秋的鲁国、南北朝的江东、五代十国的南唐、西方的希腊文明等，外面的战乱挡不住里面的繁华，一旦和平到来，文明立刻星火燎原。历史界有一种观点，认为发生在四十年内的不叫历史，叫交往记忆，因为当事人还在，四十年以后被固化成文字才叫历史。（刘禹锡，乐观积极的态度）</li></ul><h3 id="1013"><a href="#1013" class="headerlink" title="1013"></a>1013</h3><ul><li><strong>明知宦官里有小人，为何非用不可？</strong></li><li>造神像。宦官位卑权大，经常自作主张胡作非为。虽然不好，但是皇帝因为信任问题只能任用宦官，因为宦官已经没有社会身份了。所以宦官越来越多，他们可以替皇帝探听消息，也能靠身份做监军等监督职位。权力其实与信息流挂钩，官僚制度最好设置做事的和监察的两个部门。宋朝皇帝上朝：前殿视朝、后殿再坐、经筵、内引奏事、禁中夜对、转对/轮对，旨在落实兼听则明原则。宦官提供的关键信息能帮助皇帝做决策，信息交叉验证。大臣也会利用这种机制与皇帝进行信息博弈。（马克-斯托金，考古交叉验证，推出人类褪去体毛的时间）</li></ul><h3 id="1014"><a href="#1014" class="headerlink" title="1014"></a>1014</h3><ul><li><strong>杨家将传说到底有几分真？</strong></li><li>宋真宗力不从心，用的大臣都是老臣。杨延昭去世。杨家将的真实性占比?杨家将三代：杨业，杨延昭，杨文广。民间关于杨家将的故事大部分是虚构的。口语文化，区别于信史。在口语时代（文字不普及），文化传播规模大，传播力强（例如各文明的史诗），一代代人口口相传。关于史诗：帕里-诺德理论（人们通过各种套路、套话编织出长故事）。口语时代的人记诵能力强，现代人因为进入了电子时代不需要大段背诵的能力，能力逐渐消退。口语时代的人真实和虚构界限模糊，口口相传会叠加自己的想象。文字文化的白纸黑字带来确定性，也就有了标准答案，这是口语文化没有的。文字文化中的人生活在别处，统一的标准是由远方的人定的；而口语文化的人生活在附近，生活的标准由周围的人校正，只在乎自己生活的附近。口口相传的传说一旦写成定本，它精彩绝伦的口语变化就消失了，只能舍弃自由发挥的想象。口语文化为即兴发挥、文字创造力留下空间。说书人关注的是观众，而不是是否按照书本准确地讲。听书、听剧其实是在参与这场游戏，每个人都在见证每场的不一样。（口语传播者）</li></ul><h3 id="1015"><a href="#1015" class="headerlink" title="1015"></a>1015</h3><ul><li><strong>5次罢相，寇准一生为何大起大落？</strong></li><li>寇准第四次被贬。现实中寇准其实豪奢，和传说有出入。寇准因为年轻，深受大臣和皇帝的喜爱，前半段仕途顺利。其实是宋太宗有意提拔科举进士，想打造大臣班底。寇准是孤臣，不党，符合宋太宗的期望，但也因为这种我行我素的性格被贬多次，他二十年性格上没有成长。二十岁以后成长是在社会网络中的，向周围网络输出秩序。成长不能忽视社会网络关系。</li></ul><h3 id="1016"><a href="#1016" class="headerlink" title="1016"></a>1016</h3><ul><li><strong>宋朝宰相名为什么这么怪？</strong></li><li>宋真宗终于停止搞封建迷信了。北宋前期宰相官名是，同中书门下平章事。宰相的称号很乱。同：暂代、等同，中书门下：中书省、门下省，平：辨别，章：彰显，事：国家大事。唐朝中期开始，真正的宰相头衔有名无实，同中书门下平章事成了真宰相。古代官制三个逻辑：一、破格提拔资历浅的人，因为资历老的难管，他们用来削弱老资历大臣的权利。二、分拆，宰相拆成中书（起草）、尚书（执行）、门下省（审核），宰相共同决策，而不是一人专权。三、临时性差遣替代正式官职，方便处理事。这种非正式制度目的是找到皇帝与宰相的平衡，让宰相既不以下犯上，又有行政高效率。正式制度与非正式制度共存，让国家行政管理更有弹性，具体情况具体实行，实事求是。（费孝通：双轨政治，正式规则+民间规则）真正做事的人，会坚持大纲推动目标，又根据需要创设权宜之计。</li></ul><h3 id="1017"><a href="#1017" class="headerlink" title="1017"></a>1017</h3><ul><li><strong>如何拥有被讨厌的勇气？</strong></li><li>宰相王旦去世，谥号文贞（文正）。王旦正好赶上崇文抑武的时代红利，父亲王祜关系网好。王旦不存私心，他把权利和责任的界限划分的清清楚楚，该做什么就做什么。课题分离：只操心自己的事，谁承担后果就是谁的事。（《被讨厌的勇气》）正办：事情在此情此景下最正大光明、理应如此的处理方法。不会处理事情时以诚相待，虽不能占到便宜，也不至于过于吃亏。即使吃亏，后面挽回损失。尊重规则，并帮助人，该怎么办就怎么办。（阿德勒的生活哲学）</li></ul><h3 id="1018"><a href="#1018" class="headerlink" title="1018"></a>1018</h3><ul><li><strong>科举到底是一种怎样的全民游戏？</strong></li><li>宋真宗要立太子。“书中自有黄金屋，书中自有颜如玉”，《劝学诗》不是宋真宗写的，这首诗不符合儒家价值观。把它归为宋真宗写的，是早期印刷文化的乱象。宋真宗把科举平民化。有领导力的人，不是统一共识，而是统一目标。朝廷放出少量官位，却让全国读书人上瘾，就想现在的游戏。游戏的底层逻辑是随机奖励（斯金纳的盒子），随机奖励带来沉迷效应。且成长路径十分清楚，确定性强。科举也一样，所以科举是一个全民共识的政治制度，允许任何人带着自己的理解参与进来。科举可以让老人也看到考取功名的希望，让所有读书人看到稳步上升的台阶。哪怕只中秀才，社会地位也会提升，声望也会提高。现代教育相对科举而言，投入成本提高，成果确定性降低。一个成功的制度会直面参与者的欲望，能接纳各种价值观的人。（蒲松龄，私塾先生）</li></ul><h3 id="1019"><a href="#1019" class="headerlink" title="1019"></a>1019</h3><ul><li><strong>文坛宗师是怎么掉队的？</strong></li><li>杨亿，宋真宗时代的文坛盟主，创立了诗歌当中的西昆体（《西昆酬唱集》）。西昆体现代的评价偏负面，但是在北宋当时备受好评，风靡一时。杨亿从小就是神童，神童好处是可以结交朝中重臣，陪太子读书获得信任，以后可以给皇上当秘书，也经常成为科举主考官。杨亿影响文坛除了做科举主考官提携后辈，还有编大书传后世。杨亿为人顽固任性，但所有人都宠着他。西昆体特点：做工精细，辞藻华丽，堆砌典故（学李商隐“獭祭鱼”），所以当代人（特别是钱钟书）对他的评价很差。西昆体在当时受到追捧，是因为宋真宗想营造一个太平盛世的文风，当时人就喜欢这种写法。也因为当时文人有酬唱需要，有竞争性，所以以西昆体为标准，看谁掌握的典故多，谁学问就大。成为大师需要有深入的对话对象，不取决于他的才能和机遇，而是探寻深处的永恒话题。（钱钟书《宋诗选注》，有自己的选择标准）</li></ul><h3 id="1020"><a href="#1020" class="headerlink" title="1020"></a>1020</h3><ul><li><strong>寇准做对了什么关键选择？</strong></li><li>大宦官周怀政政变，结果失败被处决，寇准一派被牵连，刘皇后和丁谓一派胜利。寇准前一年献天书得以当宰相，可能这件事其实是皇帝主动启用寇准，为了确保皇位交接，防范刘皇后。寇准能抗责任，能断大事，但是与大臣们的关系不好，尤其是丁谓从朋友变政敌，且做事大大咧咧。周怀政害怕失宠，发动政变，但是很快失败。寇准一贬再贬，直到在雷州去世，后来形象在民间不断美化。人非圣贤，孰能无过，有缺点的普通人也能成为圣贤一样的人。寇准政治上的抉择，都是在文明的时间尺度上，只做对的、符合道德原则的事，而不是根据利益来选择，后世的美名是文明对他选择的报答，文明选择性遗忘了他的缺陷。历史有时候为了真善美，会隐藏真实，牺牲真实，制造真实。这是礼教的作用，在塑造所有人，带来文明共识。礼教给历史评判带来标准，做事不问可不可能，但问应不应该。（诗人寇准，七言绝句）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 历史 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《文明之旅》 </tag>
            
            <tag> 历史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生信1：Numpy + Pandas</title>
      <link href="/2025/01/30/sheng-xin-numpy-pandas/"/>
      <url>/2025/01/30/sheng-xin-numpy-pandas/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>生物信息学是一门以生物学、数学和信息科学为基础的交叉学科，它通过综合运用数学和信息科学等多领域的方法和工具对生物信息进行获取、加工、存储、分析和解释，来阐明大量生物数据所包含的生物学意义。</li><li>这里的Pandas只作最简单的介绍，详细使用见另一篇文章<strong>Pandas</strong>！</li></ul><hr><center> 所有代码均用Jupyter实现</center> <h1 id="一、numpy"><a href="#一、numpy" class="headerlink" title="一、numpy"></a>一、numpy</h1><h2 id="1、基本介绍"><a href="#1、基本介绍" class="headerlink" title="1、基本介绍"></a>1、基本介绍</h2><ul><li>NumPy是Python编程语言的一个扩展程序库，支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。</li><li>NumPy的主要对象是一个叫做ndarray的同质多维数组，即一个所有元素类型相同、且在内存中连续存储的表格，可以通过一组N个正整数来索引。</li></ul><h2 id="2、代码"><a href="#2、代码" class="headerlink" title="2、代码"></a>2、代码</h2><h3 id="①创建对象"><a href="#①创建对象" class="headerlink" title="①创建对象"></a>①创建对象</h3><p>Numpy数组是一个多维数组对象，称为ndarray，它由两部分组成：</p><ul><li>实际的数据</li><li>描述这些数据的元数据</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 多维数组ndarray</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npar <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">)</span>          <span class="token comment" spellcheck="true"># 输出数组，注意数组的格式：中括号，元素中间没有逗号（和列表区分）</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">.</span>ndim<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 输出数组维度的个数（轴数），或者说“秩”，维度的数量也称 rank</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 数组的维度，对于n行m列的数组，shape为（n，m）</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">.</span>size<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 数组的元素总数，对于n行m列的数组，元数总数为n*m</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 数组中元素的类型，类似type()（注意：type()是函数，dtype是方法）</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">.</span>itemsize<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 数组中每个元素的字节大小，int32类型字节为4，float64类型字节为8</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">.</span>data<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">#包含实际数组元素的缓冲区，由于一般通过数组的索引获取元素，所以通常不需要使用这个属性</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：<br><img src="https://s2.loli.net/2025/01/30/U6oOE2h9xIDlptc.png"></p><pre class="line-numbers language-python"><code class="language-python">ar1 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">3.0</span><span class="token punctuation">,</span>num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">)</span>ar2 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">3.0</span><span class="token punctuation">,</span>num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>endpoint <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>ar3 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">3.0</span><span class="token punctuation">,</span>num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>retstep <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar1<span class="token punctuation">,</span>type<span class="token punctuation">(</span>ar1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar3<span class="token punctuation">,</span>type<span class="token punctuation">(</span>ar3<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：<br><img src="https://s2.loli.net/2025/01/30/LrC6B1tSIvkTxmK.png"></p><h3 id="②索引和切片"><a href="#②索引和切片" class="headerlink" title="②索引和切片"></a>②索引和切片</h3><ul><li>核心：基本索引及切片 / 布尔型索引及切片</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npar <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----------------------------------"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 一维数组索引及切片（类似list）</span>ar <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">,</span> <span class="token string">'数组的轴数为%d'</span><span class="token operator">%</span> ar<span class="token punctuation">.</span>ndim<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 4*4的数组</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'数组的轴数为%d'</span><span class="token operator">%</span> ar<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ndim<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 切片为下一维度的一个元素，所以是一维数组</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 二次索引，得到一维数组中的一个值</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'数组轴数为%d'</span><span class="token operator">%</span> ar<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ndim<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 切片为两个一维数组组成的二维数组</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>       <span class="token comment" spellcheck="true"># 切片数组中的第3行第3列--->10</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 切片数组中的1,2行，2、3、4列--->二维数组</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----------------------------------"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 二维数组索引及切片</span>ar <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">,</span> <span class="token string">'数组的轴数为%d'</span><span class="token operator">%</span> ar<span class="token punctuation">.</span>ndim<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 2*2*2的数组</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'数组的轴数为%d'</span><span class="token operator">%</span> ar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ndim<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 三维数组的下一个维度的第一个元素--->一个二维数组</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'数组的轴数为%d'</span><span class="token operator">%</span> ar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ndim<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 三维数组的下一个维度的第一个元素下的第一个元素--->一个一维数组</span><span class="token keyword">print</span><span class="token punctuation">(</span>ar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'数组的轴数为%d'</span><span class="token operator">%</span> ar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ndim<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 三维数组索引及切片</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：<br><img src="https://s2.loli.net/2025/01/30/ZqM1SrEDaI26NJ4.png"></p><h1 id="二、pandas"><a href="#二、pandas" class="headerlink" title="二、pandas"></a>二、pandas</h1><h2 id="1、基本介绍-1"><a href="#1、基本介绍-1" class="headerlink" title="1、基本介绍"></a>1、基本介绍</h2><ul><li>Pandas 是一个强大的Python库，专门用于数据操作和分析。它提供了数据结构和数据分析工具，特别是为处理表格数据（类似于电子表格或SQL表）设计的数据结构DataFrame，以及用于处理一维标记数据的Series对象。</li><li>Pandas在处理各种数据源时非常有用，支持从CSV、Excel文件、数据库等读取数据，并且可以方便地进行数据清洗、转换、合并和分析。</li></ul><h2 id="2、代码-1"><a href="#2、代码-1" class="headerlink" title="2、代码"></a>2、代码</h2><h3 id="①对象"><a href="#①对象" class="headerlink" title="①对象"></a>①对象</h3><ul><li>核心：series相比于ndarray，是一个自带索引index的数组 → 一维数组 + 对应索引</li><li>所以当只看series的值的时候，就是一个ndarray</li><li>series和ndarray较相似，索引切片功能差别不大</li><li>series和dict相比，series更像一个有顺序的字典（dict本身不存在顺序），其索引原理与字典相似（一个用key，一个用index）</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Series数据结构</span><span class="token comment" spellcheck="true"># Series是带有标签的一维数组，可以保存任何数据类型（整数、字符串、浮点数、Python对象等），轴标签统称为索引</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment" spellcheck="true"># 导入Numpy，Pandas模块</span>s <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># Series的索引未必一定是数字，也可以是字母等等</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>type<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 查看数据，数据类型</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>index<span class="token punctuation">,</span>type<span class="token punctuation">(</span>s<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># index类似于一个生成器，要想输出可以用list()</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>values<span class="token punctuation">,</span>type<span class="token punctuation">(</span>s<span class="token punctuation">.</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># .index查看series索引，类型为rangeindex</span><span class="token comment" spellcheck="true"># .values查看series值，类型是ndarray</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：<br><img src="https://s2.loli.net/2025/01/30/EKbWYXA2rOwCZt5.png"></p><h3 id="②索引"><a href="#②索引" class="headerlink" title="②索引"></a>②索引</h3><hr><ul><li>位置下标</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 位置下标，类似列表</span>s <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> type<span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>float<span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>type<span class="token punctuation">(</span>float<span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>             <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>位置下标从0开始<br>输出结果为numpy.float格式<br>可以通过float()函数转换为Python float 格式<br>numpy.float与float占用字节不同</em></p><p>输出：<br><img src="https://s2.loli.net/2025/01/30/QyuNeabVf5cz7qr.png"></p><hr><ul><li>标签索引</li></ul><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>index <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token string">'abcde'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'\t'</span><span class="token punctuation">,</span> type<span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'\t'</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 方法类似下标索引，用[]表示，里面协商相应的index，注意，index是字符串</span>sci <span class="token operator">=</span> s<span class="token punctuation">[</span>list<span class="token punctuation">(</span><span class="token string">'abe'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>sci<span class="token punctuation">,</span> <span class="token string">'\t'</span><span class="token punctuation">,</span> type<span class="token punctuation">(</span>sci<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'\t'</span><span class="token punctuation">,</span> sci<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>如果需要选择多个标签的值，用[[]]来表示（相当于[]中包含一个列表）<br>多标签索引结果是新的数组  注意：<strong>标签的顺序可以改变！！！</strong></em></p><p>输出：<br><img src="https://s2.loli.net/2025/01/30/9sW2naCxQyVhUBw.png"></p><hr><ul><li>切片索引</li></ul><pre class="line-numbers language-python"><code class="language-python">s1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>s2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> index <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token string">'abcde'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'\t'</span><span class="token punctuation">,</span> s1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>       <span class="token comment" spellcheck="true"># 下标</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">:</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'\t'</span><span class="token punctuation">,</span>s2<span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#  标签</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'\t'</span><span class="token punctuation">,</span>s2<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"-------------------------------------------------"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 注意：用index做切片是末端包含</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>下标索引做切片，和列表写法一样</em></p><p>输出：<br><img src="https://s2.loli.net/2025/01/30/lk3D1fsFKTyZ47A.png"></p><hr><ul><li>布尔型索引</li></ul><pre class="line-numbers language-py"><code class="language-py">s = pd.Series(np.random.rand(3)*100)s[4] = None      # 添加一个空值，将空值写成np.NaN也是可以的print(s)bs1 = s > 50bs2 = s.isnull()bs3 = s.notnull()print(bs1,type(bs1),bs1.dtype)print(bs2,type(bs2),bs2.dtype)print(bs3,type(bs3),bs3.dtype)print("-----------------------------------------")# 数组作出判断之后，返回的是有一个布尔值组成的新的数组# .isnull() / .notnull() 方法判断是否为空值（None代表空值，NaN代表有问题的数值，两个都会识别为空值）print(s[s > 50])print(s[bs3])<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>布尔型索引方法：用[判断条件]来进行表示，其中判断条件可以是一条语句，或者也可以是一个布尔型数组！</em></p><p>输出：<br><img src="https://s2.loli.net/2025/01/30/HS6JrxtFBDbR2Lc.png"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pandas </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习1——Pandas</title>
      <link href="/2025/01/29/ji-qi-xue-xi-1-pandas/"/>
      <url>/2025/01/29/ji-qi-xue-xi-1-pandas/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>Pandas 是 Python 语言的一个扩展程序库，用于数据分析。</li><li>Pandas 名字衍生自术语 “panel data”（面板数据）和 “Python data analysis”（Python 数据分析）。</li><li>Pandas 是一个开放源码、BSD 许可的库，提供高性能、易于使用的数据结构和数据分析工具。</li><li>Pandas 一个强大的分析结构化数据的工具集，基础是 Numpy（提供高性能的矩阵运算）。</li></ul><hr><h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><ul><li>panel + data + analysis（panel data 面板数据）</li><li>数据处理工具</li></ul><h2 id="Why-pandas？"><a href="#Why-pandas？" class="headerlink" title="- Why pandas？"></a>- Why pandas？</h2><ul><li>便捷的数据处理能力</li><li>读取文件方便</li><li>封装了Matplotlib、Numpy的画图和计算</li></ul><h1 id="二、核心数据结构"><a href="#二、核心数据结构" class="headerlink" title="二、核心数据结构"></a>二、核心数据结构</h1><p><em><strong>具体介绍代码见Python&gt;pandas文件中的==data_structure.ipynb==文件</strong></em></p><ul><li><strong>==dataframe==</strong></li><li>series<br><em>理解：DataFrame是Series的容器</em></li></ul><h2 id="1、DataFrame"><a href="#1、DataFrame" class="headerlink" title="1、DataFrame"></a>1、DataFrame</h2><h3 id="（1）基本"><a href="#（1）基本" class="headerlink" title="（1）基本"></a>（1）基本</h3><ul><li>结构：类似二维数组，有行、列索引</li><li>属性：shape、index、columns、values、T（转置）</li><li>方法：head()、tail()</li></ul><h3 id="（2）索引的设置"><a href="#（2）索引的设置" class="headerlink" title="（2）索引的设置"></a>（2）索引的设置</h3><ul><li>修改行列索引值（只能整体修改）</li><li>重设索引</li><li>设置新索引</li></ul><h3 id="（3）MultiIndex"><a href="#（3）MultiIndex" class="headerlink" title="（3）MultiIndex"></a>（3）MultiIndex</h3><ul><li>MultiIndex是设置了多索引之后的DataFrame，可以存储三维数据</li><li>MultiIndex的属性有names、levels</li></ul><h2 id="2、Series"><a href="#2、Series" class="headerlink" title="2、Series"></a>2、Series</h2><ul><li><p>带索引的一维数组<br><img src="https://s2.loli.net/2025/01/14/oTAGCauzhKpjsRH.png" alt="image.png"></p></li><li><p>属性：index、values</p></li><li><p>方法：创建Series、head()、tail()</p></li></ul><h1 id="三、基本数据操作"><a href="#三、基本数据操作" class="headerlink" title="三、基本数据操作"></a>三、基本数据操作</h1><p><em><strong>具体代码见Python&gt;pandas文件中的==basic_data_operations.ipynb==文件</strong></em></p><h2 id="1、索引操作"><a href="#1、索引操作" class="headerlink" title="1、索引操作"></a>1、索引操作</h2><ul><li>直接索引（必须先列后行）</li><li>按名字索引（loc，先行后列）</li><li>按数字索引（iloc，先行后列）</li><li>组合索引（loc、iloc，数字和名字混用）</li><li>isin()：判断某一行是否存在某个值</li></ul><h2 id="2、赋值操作"><a href="#2、赋值操作" class="headerlink" title="2、赋值操作"></a>2、赋值操作</h2><ul><li>整列修改</li><li>索引到某个值后修改</li></ul><h2 id="3、排序操作"><a href="#3、排序操作" class="headerlink" title="3、排序操作"></a>3、排序操作</h2><ul><li>对内容排序（.sort_values(by=’ ‘, ascending=<strong>True</strong>/False)）</li><li>对索引排序（.sort_index()）<br><em>对于Series来说只有一维，不用考虑按照哪个字段排序</em></li></ul><h2 id="4、运算操作"><a href="#4、运算操作" class="headerlink" title="4、运算操作"></a>4、运算操作</h2><p><em>主要是DataFrame</em></p><ul><li><p>算术运算（add()）</p></li><li><p>逻辑运算</p><ul><li>逻辑运算符（&lt;、&gt;、|、&amp;）</li><li>逻辑运算函数（**query(查找的字符串)**、isin()）</li></ul></li><li><p>统计运算</p><ul><li>统计指标：count、min、max、mean、median、var、std</li><li>describe()：直接得出统计指标<ul><li>效果：<img src="https://s2.loli.net/2025/01/14/gewhsKTdoXjfzYp.png" alt="image.png"></li></ul></li><li>返回索引：idxmin()、idxmax()</li><li>累计统计函数：cumsum()、cummax()、cummin()、cumprod()</li><li><strong>配合画图函数plot()：默认为折线图</strong><ul><li>cumsum()画图效果：<em>（记得先对时间排序再累加）</em><img src="https://s2.loli.net/2025/01/14/63nlHfO1ZALTWgb.png" alt="image.png"></li></ul></li></ul></li><li><p>自定义运算（apply(func, axis= )）</p><ul><li>func：自定义函数</li><li>axis：默认为按列运算axis=0</li></ul></li></ul><h2 id="5、画图操作"><a href="#5、画图操作" class="headerlink" title="5、画图操作"></a>5、画图操作</h2><ul><li>(Series).plot()：默认折线图（见上面运算操作中的统计运算）</li><li>(DataFrame).plot()：参数x、y、kind（图的类型）<ul><li><p>API：<br>  <img src="https://s2.loli.net/2025/01/14/XwVSvbd3mol6BcY.png" alt="image.png"></p></li><li><p>散点图效果：<em>（kind=’scatter’）</em><img src="https://s2.loli.net/2025/01/14/RZU5ELAzhwGgeX6.png" alt="image.png"></p></li></ul></li></ul><h1 id="四、文件读取与存储"><a href="#四、文件读取与存储" class="headerlink" title="四、文件读取与存储"></a>四、文件读取与存储</h1><p><em><strong>具体代码见Python&gt;pandas文件中的==file_reading.ipynb==文件</strong></em></p><ul><li>numpy缺点：读不了字符串</li><li>大部分数据文件pandas都可以读取<br><img src="https://s2.loli.net/2025/01/14/fIjwL14ZiH3k9Wp.png" alt="image.png"><br><em>pandas可读取和储存的文件↑</em></li></ul><h2 id="1、csv文件"><a href="#1、csv文件" class="headerlink" title="1、csv文件"></a>1、csv文件</h2><h3 id="读取："><a href="#读取：" class="headerlink" title="读取："></a>读取：</h3><ul><li>pd.read_csv(路径)<ul><li>参数（可省略）：<ul><li>usecols：只读取这些列</li><li>names：命名列索引</li></ul></li></ul></li></ul><h3 id="存储："><a href="#存储：" class="headerlink" title="存储："></a>存储：</h3><ul><li>(DataFrame).to_csv(路径)<ul><li>参数（可省略）：<ul><li>columns：只保存指定的列，用列表选取</li><li>mode：读写方式，默认”w“重写，“a“追加</li><li>index：默认为True（保留<strong>行</strong>索引），False不保留</li><li>header：默认为True（保留<strong>列</strong>索引），False不保留</li></ul></li></ul></li></ul><h2 id="2、hdf5文件"><a href="#2、hdf5文件" class="headerlink" title="2、hdf5文件"></a>2、hdf5文件</h2><ul><li>二进制文件，不能直接预览</li><li>具有许多优点</li><li>一个键对应一个DataFrame，可以理解成存储三维数据</li></ul><h3 id="读取：-1"><a href="#读取：-1" class="headerlink" title="读取："></a>读取：</h3><ul><li>pd.read_hdf(路径 , key= )：多个键时必须指定key= <ul><li>参数（可省略）：<ul><li>mode：打开文件的模式</li></ul></li></ul></li></ul><h3 id="存储：-1"><a href="#存储：-1" class="headerlink" title="存储："></a>存储：</h3><ul><li>(DataFrame).to_hdf(路径 , key= )：<strong>存储时key必须有</strong></li></ul><h2 id="3、json文件"><a href="#3、json文件" class="headerlink" title="3、json文件"></a>3、json文件</h2><ul><li>前后端交互经常用到</li></ul><h3 id="读取"><a href="#读取" class="headerlink" title="读取"></a>读取</h3><ul><li>pd.read_json(路径 , lines= )<ul><li>参数：<ul><li>orient：读取的json文件以什么形式展示，<strong>一般用”records”</strong></li><li>lines：是否按行读取，填bool值，默认为False，<strong>一般需要指定为True</strong></li></ul></li></ul></li></ul><h3 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h3><ul><li>(DataFrame).to_json(路径 , key= )<ul><li>参数：<ul><li>orient：读取的json文件以什么形式展示，<strong>一般用”records”</strong></li><li>lines：是否按行读取，填bool值，默认为False，<strong>一般需要指定为True</strong></li></ul></li></ul></li></ul><h1 id="五、高级处理"><a href="#五、高级处理" class="headerlink" title="五、高级处理"></a>五、高级处理</h1><p><em><strong>具体代码见Python&gt;pandas文件中的==advanced_processing.ipynb==文件</strong></em></p><ul><li>缺失值处理</li><li>数据离散化</li><li>合并</li><li>交叉表与透视表</li><li>分组与聚合</li></ul><h2 id="1、缺失值处理"><a href="#1、缺失值处理" class="headerlink" title="1、缺失值处理"></a>1、缺失值处理</h2><h3 id="（1）How？"><a href="#（1）How？" class="headerlink" title="（1）How？"></a>（1）How？</h3><ul><li>思路：<ol><li>删除含有缺失值的样本</li><li>替换/插补，一般用平均值替换</li></ol></li></ul><h3 id="（2）处理NaN"><a href="#（2）处理NaN" class="headerlink" title="（2）处理NaN"></a>（2）处理NaN</h3><ol><li>判断是否存在NaN（结合np.any/np.all判断，或者直接加any()/all()）<ul><li>pd.isnull(DataFrame)：缺失值的地方返回True</li><li>pd.notnull(DataFrame)：不是缺失值的地方返回True</li></ul></li><li>删除含有缺失值的样本<ul><li>df.dropna(inplace= )：默认按行删除，默认inplace=False不修改原数据，生成新对象<br><strong>或</strong>：</li></ul></li><li>替换/插补<ul><li>df.loc[:, ‘xxx’] = df[‘xxx’].fillna(df[‘xxx’].mean())</li></ul></li></ol><h3 id="（3）处理非NaN的缺失值"><a href="#（3）处理非NaN的缺失值" class="headerlink" title="（3）处理非NaN的缺失值"></a>（3）处理非NaN的缺失值</h3><ol><li>替换：符号 -&gt; np.nan<ul><li>df.replace(to_replace=需要替换的东西 , value=np.nan)</li></ul></li><li>处理NaN</li></ol><h2 id="2、数据离散化"><a href="#2、数据离散化" class="headerlink" title="2、数据离散化"></a>2、数据离散化</h2><ul><li><p>用数据表示特征（取代字符串），便于后续运算</p></li><li><p>将连续数据分成多个离散区间，用不同的值代表落在区间<br><img src="https://s2.loli.net/2025/01/18/2R1feDQVIAc9q3t.png" alt="image.png"><br><strong>one-hot编码（独热编码/哑变量）</strong></p></li><li><p>数据离散化为了简化数据结构，让数据之间关系平等<br><em><strong>案例：股票的涨跌幅离散化，见文件</strong></em></p></li></ul><h3 id="如何实现数据离散化？"><a href="#如何实现数据离散化？" class="headerlink" title="如何实现数据离散化？"></a>如何实现数据离散化？</h3><ol><li>分组<ul><li>自动分组：sr = pd.qcut(data , 组数)<ul><li>自动分成等间距的组</li></ul></li><li>自定义分组：sr = pd.cut(data , bins=[区间] )<ul><li>区间列表内只用传各个区间边界值，如：bins = [150, 165, 180, 195] 分成三个区间</li></ul></li></ul></li><li>转换成独热编码（one-hot编码/哑变量）<ul><li>pd.get_dummies(sr , prefix= 前缀 , <strong>dtype=int</strong>)</li></ul></li></ol><h2 id="3、合并"><a href="#3、合并" class="headerlink" title="3、合并"></a>3、合并</h2><h3 id="（1）按方向合并"><a href="#（1）按方向合并" class="headerlink" title="（1）按方向合并"></a>（1）按方向合并</h3><ul><li>pd.concat([data1 , data2] , axis= )：默认axis=0竖直拼接</li></ul><h3 id="（2）按索引合并"><a href="#（2）按索引合并" class="headerlink" title="（2）按索引合并"></a>（2）按索引合并</h3><ul><li>pd.merge(左表 , 右表 , how=”连接方式” , on=[索引])：默认how=”inner”内连接<br><img src="https://s2.loli.net/2025/01/18/lgniweWsYC24JcQ.png" alt="image.png"><br><em><strong>连接方式</strong>，与SQL类似，碰到不共有的键补NaN</em></li></ul><h2 id="4、交叉表与透视表"><a href="#4、交叉表与透视表" class="headerlink" title="4、交叉表与透视表"></a>4、交叉表与透视表</h2><ul><li>探索两个变量直接的关系</li></ul><h3 id="（1）交叉表"><a href="#（1）交叉表" class="headerlink" title="（1）交叉表"></a>（1）交叉表</h3><ul><li>寻找两数据列之间的关系</li><li>pd.crosstab(数据列1 , 数据列2)：得到的是频数分布（先行索引，后列索引）<br><em><strong>pandas日期类型，如date = pd.to_datetime(stock.index)，用date.year/month/week等获取日期信息</strong></em></li></ul><h3 id="（2）透视表"><a href="#（2）透视表" class="headerlink" title="（2）透视表"></a>（2）透视表</h3><ul><li>df.pivot_table([ ] , index=[ ])：直接得出频率</li></ul><h2 id="5、分组与聚合"><a href="#5、分组与聚合" class="headerlink" title="5、分组与聚合"></a>5、分组与聚合</h2><ul><li><p>什么是分组与聚合：<br><img src="https://s2.loli.net/2025/01/19/3MJSqbXhd41pZQi.png" alt="image.png"><br><em>按类别分组，再经过统计函数聚合</em><br><strong>一般同时使用分组与聚合</strong></p></li><li><p>DataFrame方法：</p><ul><li>df.groupby(by=[“分组按照的列”])[“需要聚合的列”].func( )：func( )为聚合的统计函数，分组按照的列可以不止一个，放在列表给出</li><li>例如：col.groupby(by=[‘color’])[‘price1’].max()</li></ul></li><li><p>Series方法：</p><ul><li>df[“需要聚合的列”].groupby(by=df[“分组按照的列”]).func( )</li><li>例如：col[‘price1’].groupby(by=col[‘color’]).max()</li></ul></li></ul><p><em><strong>星巴克零售店铺数据案例：见文件</strong></em></p><h1 id="六、综合案例：电影数据分析"><a href="#六、综合案例：电影数据分析" class="headerlink" title="六、综合案例：电影数据分析"></a>六、综合案例：电影数据分析</h1><p><em><strong>具体代码见Python&gt;pandas文件中的==comprehensive_case.ipynb==文件</strong></em></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
          <category> 数据处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pandas </tag>
            
            <tag> python </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML + CSS</title>
      <link href="/2025/01/27/html-css/"/>
      <url>/2025/01/27/html-css/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li><strong>HTML</strong>：HTML的全称为超文本标记语言，是一种标记语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的Internet资源连接为一个逻辑整体。HTML文本是由HTML命令组成的描述性文本，HTML命令可以说明文字，图形、动画、声音、表格、链接等。超文本是一种组织信息的方式，它通过超级链接方法将文本中的文字、图表与其他信息媒体相关联。这些相互关联的信息媒体可能在同一文本中，也可能是其他文件，或是地理位置相距遥远的某台计算机上的文件。这种组织信息方式将分布在不同位置的信息资源用随机方式进行连接，为人们查找，检索信息提供方便。</li><li><strong>CSS</strong>：层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。</li></ol><hr><h1 id="1、HTML"><a href="#1、HTML" class="headerlink" title="1、HTML"></a>1、HTML</h1><p>问题求助：利用jsfiddle.net，可以随时修改代码<br>学习、求助：codepen.io<br>测试网页有效：validator.w3.org/#validate_by_input</p><ul><li>具体HTML结构标签看文件夹HTML</li><li>换行符标签：<br>（单标签，也可写成&lt;br&gt;&lt;/br&gt;）</li><li>斜体标签：\&lt;i&gt;&lt;/i&gt;</li><li>水平线标签：\&lt;hr&gt;</li><li>设置网页编码为简体中文：\&lt;meta charset=”gb2313”&gt;</li><li>居中标签：\&lt;center&gt;&lt;/center&gt;</li><li>表格标签</li></ul><h1 id="2、CSS"><a href="#2、CSS" class="headerlink" title="2、CSS"></a>2、CSS</h1><h2 id="1、样式表"><a href="#1、样式表" class="headerlink" title="1、样式表"></a>1、样式表</h2><p><img src="https://s2.loli.net/2025/01/12/3GXh4QwCEibmUYt.png" alt="Pasted image 20240713171319"></p><h2 id="2、选择器"><a href="#2、选择器" class="headerlink" title="2、选择器"></a>2、选择器</h2><ul><li><p>三种选择器：元素、类、ID选择器<br><img src="https://s2.loli.net/2025/01/12/yhCJFfELiQdBAHt.png" alt="Pasted image 20240713171406"></p></li><li><p>组合选择器：<br><img src="https://s2.loli.net/2025/01/12/FZXbAVSkla4QtfD.png" alt="Pasted image 20240713170708"></p></li><li><p>伪类选择器<br><img src="https://s2.loli.net/2025/01/12/2LDdptlVo5g9ca7.png" alt="Pasted image 20240713171653"><br><em>第1、2改变链接的样式，第3、4个改变动态样式，第5个锚定目标</em></p></li></ul><h2 id="3、文本样式设计"><a href="#3、文本样式设计" class="headerlink" title="3、文本样式设计"></a>3、文本样式设计</h2><ul><li>外部样式表<br>标签&lt;link rel=”xxx”  href=”xxx.css”&gt;：链接到外部样式表</li><li>解决冲突：<br>1、声明靠后的优先<br>2、子标签会继承父标签<br>3、特定规则：<br><img src="https://s2.loli.net/2025/01/12/47snQ3fXGgPBHSo.png" alt="Pasted image 20240715205055"><br><em>!important：直接垄断样式</em></li><li>文本样式：（例子）<br>font-family: Arial, Helvetica, sans-serif; ：字体<br>color: #0000ff; ：字体颜色<br>font-style: italic; ：斜体<br>font-weight: bold; ：加粗<br>font-size: 24px; / font-size: 120%; （当前的120%）/ font-size: 2em;（当前的两倍）/ font-size: .5em;（当前的0.5倍）：字体大小<br>text-transform: uppercase; ：全部大写<br>text-align: right; ：靠右对齐</li></ul><h2 id="4、箱体模型和布局"><a href="#4、箱体模型和布局" class="headerlink" title="4、箱体模型和布局"></a>4、箱体模型和布局</h2><ul><li>盒子模型：<br><em>*选择器：强制应用于所有标签</em><br><img src="https://s2.loli.net/2025/01/12/3dbtUZHE2x41STg.png" alt="Pasted image 20240716165827"></li><li>背景属性：<br><img src="https://s2.loli.net/2025/01/12/DtJzCAlrpR9smoY.png" alt="Pasted image 20240716172045"></li><li>浮动定位元素</li><li>绝对定位和相对定位</li></ul><h2 id="5、响应式设计"><a href="#5、响应式设计" class="headerlink" title="5、响应式设计"></a>5、响应式设计</h2><ul><li><p>媒体查询：特定屏幕性质（大小、横竖等）设置特定样式<br><img src="https://s2.loli.net/2025/01/12/gaB7hR8ozW3cL16.png" alt="Pasted image 20240717171141"><br><img src="https://s2.loli.net/2025/01/12/Jd7sFOKHUah4Pgr.png" alt="Pasted image 20240717171656"></p></li><li><p>响应式设计：网站布局适应不同设备</p></li><li><p>响应式框架：12列网格布局<br><img src="https://s2.loli.net/2025/01/12/ntVO5r8I1KZwXyf.png" alt="Pasted image 20240717174332"></p></li></ul><h2 id="6、Twitter-Bootstrap"><a href="#6、Twitter-Bootstrap" class="headerlink" title="6、Twitter Bootstrap"></a>6、Twitter Bootstrap</h2><ul><li><p>定义：<br><img src="https://s2.loli.net/2025/01/12/qvsF5wlIz7RVoGn.png" alt="Pasted image 20240720203218"></p></li><li><p>缺点：<br><img src="https://s2.loli.net/2025/01/12/hmbRu79CWs54SZG.png" alt="Pasted image 20240720203157"></p></li><li><p>网格系统：<br><img src="https://s2.loli.net/2025/01/12/ONGKFD5r18TgzVk.png" alt="Pasted image 20240720211159"><br><em>↑代码示例</em><br><img src="https://s2.loli.net/2025/01/12/EbsNAIXFPWGumdY.png" alt="Pasted image 20240720210715"><br><em>↑行的运用</em><br><img src="https://s2.loli.net/2025/01/12/rCFhpXmtnaIJ4s1.png" alt="Pasted image 20240720212805"><br><em>↑列的运用</em></p></li></ul><h1 id="3、实战"><a href="#3、实战" class="headerlink" title="3、实战"></a>3、实战</h1><ul><li>基本原则（制作网页前与客户达成一致）：<br><img src="https://s2.loli.net/2025/01/12/9AlQK1sJ8uIv2kb.png" alt="Pasted image 20240721230147"></li><li>先设计版面，再编写程序，然后审核、修改</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《文明之旅》1000-1010年</title>
      <link href="/2025/01/26/wen-ming-zhi-lu-1000-1010-nian/"/>
      <url>/2025/01/26/wen-ming-zhi-lu-1000-1010-nian/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这是一档聚焦中国历史，计划持续二十年制作播出的视频节目，也是一个超长期的文化工程。它将传承《资治通鉴》的中国编年史传统，从公元1000年开讲，一直讲到1912年，每一期节目聚焦于中国历史上的一年。上下913期节目，前后20年的时光，将陪伴和影响不止一代人。</p><hr><h2 id="1000"><a href="#1000" class="headerlink" title="1000"></a>1000</h2><ul><li>宋代走出五代阴影，士大夫崛起。</li></ul><h2 id="1001"><a href="#1001" class="headerlink" title="1001"></a>1001</h2><ul><li>四川由来，瓦解比土崩更难重建，地方军阀削弱。</li></ul><h2 id="1002"><a href="#1002" class="headerlink" title="1002"></a>1002</h2><ul><li>科举改革，对大臣互相勾结的削弱，他荐制变为自荐制。</li></ul><h2 id="1003"><a href="#1003" class="headerlink" title="1003"></a>1003</h2><ul><li>李沆，建议都包含动机，你眼里的问题是别人的解决方案。真正的保守主义，反对以法国大革命为例的、以理性为核心的自由主义，反对对社会的彻底破坏与重建，主张从基层寻找进步的方向，不断试错与纠正，达到逐步进步的目的。</li></ul><h2 id="1004"><a href="#1004" class="headerlink" title="1004"></a>1004</h2><ul><li>皇帝亲征，防守战第几个，将国家经济资源和技术资源转化为战斗力。</li></ul><h2 id="1005"><a href="#1005" class="headerlink" title="1005"></a>1005</h2><ul><li>澶渊之盟签订，有利于大宋，可以算账的战争，双方更多约束羁绊。战争爆发只有一种原因，一方对双方实力错误评估，信息差。</li></ul><h2 id="1006"><a href="#1006" class="headerlink" title="1006"></a>1006</h2><ul><li>景德镇，农耕文明中的工业文明火种，农业与工业的区别，特别是思想观念上，出现了截然不同的人生道路，考取功名不是唯一生存形式。（北京 模范空间）</li></ul><h2 id="1007"><a href="#1007" class="headerlink" title="1007"></a>1007</h2><ul><li>辽朝建第四都城（中京），农耕文明与游牧文明的民族大融合是必须解决的问题。管理区别，中原民族收税（易），草原民族收买（难）。二元王朝辽朝南北院，两种制度管理。辽朝皇帝四时捺钵，与各领地沟通和交易。</li></ul><h2 id="1008"><a href="#1008" class="headerlink" title="1008"></a>1008</h2><ul><li>天书封禅，宋真宗大搞迷信活动（真宗是历史上第六位也是最后一位封禅皇帝）。主流解释是奸臣王钦若推荐真宗封禅，新解释认为是太平盛世，民心所向。但是神道设教的谎言受人唾弃批评。迷信的社会后果：1.传播范围广，低成本高收益；2.很强的网络性，受身边人影响；3.信息失真，民众跟风，坏人搭便车牟利，后果随时间越来越大。（海外汉学传统）</li></ul><h2 id="1009"><a href="#1009" class="headerlink" title="1009"></a>1009</h2><ul><li>建道观（玉清昭应宫）供奉天书，耗财耗力，用军队建，赏赐丰厚，人们乐意参与。宋真宗模仿唐玄宗，要确保赵家正统性，证明现在是太平盛世。皇帝停不下来迷信活动：个人因素认知失调（当你发现事实和认知不符时，必然会产生一个幻觉来解释事实）。社会因素身边人因自身利益推动，观念变成事实不好收手。</li></ul><h2 id="1010"><a href="#1010" class="headerlink" title="1010"></a>1010</h2><ul><li>宋仁宗出生。辽朝打高丽，因为陆地大国有安全困境（不是朋友的人互相猜忌，导致所有人都紧张备战，大战一触即发，除非互相充满善意）。边疆问题十分敏感（明确界限，邻国问题）。高丽打不服，因为文化上蔑视辽朝，仰慕宋朝。宋和辽都搞不定周边小国，因为都有自己的文化认同（唐朝遗留）。唐朝管理边疆时采用羁縻制度（极大自主权，但受中央管理），首领世子进宫，皇帝赐姓李，少数民族从中学习了唐朝制度文化。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 历史 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《文明之旅》 </tag>
            
            <tag> 历史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test_my_site</title>
      <link href="/2025/01/23/test-my-site/"/>
      <url>/2025/01/23/test-my-site/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/01/23/hello-world/"/>
      <url>/2025/01/23/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
